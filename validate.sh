#!/bin/bash

# *-------------------- `validate.sh` Exit Codes --------------------* #
#  0 : Success              :   'check.sh' ran with no errors, 'validate.sh' checks pass
#  1 : Student error        :   `diff` fail, timeouts, etc
#  2 : Development error    :   Missing testcase dirs, missing output files, etc

# Lab parameters
# * Files named "src/ex${lab_num}q${i}.c" should exist for all i=1,2,...,$number_of_exercises
lab_num=2
number_of_exercises=2
allowed_libraries=("^(stdio\.h)$" "^(stdio\.h|math\.h)$")

# Directories
source_dir="./src"              # Required
testcases_dir="./Testcases"     # Given

# Testcase files postfixes
input_postfix="input.txt"
output_postfix="output.txt"
student_postfix="student.txt"

# check.sh
student_check_file="./check.sh"
time_limit_check=5

# Logging functions and starting message
width=$(tput cols);
log()     { printf "\033[00m[CHECK] %s\033[0m\n" "$1"; }
info()    { printf "\033[33m[CHECK] %s\033[0m\n" "$1"; }
success() { printf "\033[32m[CHECK] %s\033[0m\n" "$1"; }
warning() { printf "\033[35m[CHECK] Warning: %s\033[0m\n" "$1"; }
br()      { break=$(printf "%*s" "$((width-8))" "" | tr " " "-"); log "$break"; }
error() {
    printf "\033[31m[CHECK] Error: %s\033[0m\n" "$1";
    log ""
    br; info "END: Check failed."; br; echo;
    exit "$2";
}
doesPass=1
errorCont() {
    doesPass=0
    printf "\033[31m[CHECK] Error: %s\033[0m\n" "$1";

    # Get user input
    printf "\033[33m[CHECK] Enter to continue, or type anything to exit: \033[0m"
    read input

    # Terminate
    if [[ -n "$input" ]]; then
        info "Exiting with errors..."
        log ""
        br; info "END: Check failed."; br; echo;
        exit "$2";
    fi

    info "Continuing..."

}
doesFileExist() {
    # Returns 0 if doesn't exist, 1 if it does
    if [[ ! -e "$1" ]]; then
        return 0
    fi

    return 1
}


echo; br; success "START"; br; log ""

# Check if required directories exists
if [ ! -d "$testcases_dir" ]; then
    error "Expected test cases directory '$testcases_dir' does not exist." 2
fi
if [ ! -d "$source_dir" ]; then
    error "Expected source directory '$source_dir' does not exist." 1
fi

# Remove write access to the *-*-input.txt and *-*-output.txt files
chmod -w "$testcases_dir"/*-*-${input_postfix}
chmod -w "$testcases_dir"/*-*-${output_postfix}

# Check that all required files exist
for ((ex_num = 1; ex_num <= number_of_exercises; ex_num++)); do
    file="${source_dir}/ex${lab_num}q${ex_num}.c"
    if [ ! -e "$file" ]; then
        error "Required file '$file' not found." 1
    fi

    # Check for extra includes
    regex_index=$((ex_num - 1))
    extra_include_count=$(
        grep '^\s*#\s*include\b' "$file" | \
        sed -E 's/^\s*#\s*include\s*[<"]([^">]+)[">].*/\1/' | \
        grep -Ev "${allowed_libraries[$regex_index]}" | \
        wc -l
    )
    if [[ "$extra_include_count" -ne 0 ]]; then
        error "Banned libraries found in '$file': You're not allowed to include libraries not specified in the README." 1
    fi
done

# Delete student output files (should be regenerated by check.sh)
rm -f "$testcases_dir"/*-*-${student_postfix}

# Run the student's check.sh file
log "Running '$student_check_file'"
br

timeout "$time_limit_check" "$student_check_file"
exit_code=$?
br
if [ $exit_code -eq 124 ]; then
    error "check.sh timed out." 1
elif [ $exit_code -ne 0 ]; then
    error "check.sh exited with non-zero exit code." 1
fi

log "'$student_check_file' was executed. Output (if any) is shown above."

# Iterate through source files matching 'ex[0-9]q[0-9].c' in the source directory
for ((ex_num = 1; ex_num <= number_of_exercises; ex_num++)); do

    br

    source_path="$source_dir/ex${lab_num}q${ex_num}.c"
    program_name=$(basename "${source_path%.c}")

    log "Checking '$program_name'..."
    
    # Iterate over every input file corresponding to the exercise number
    for input_path in "$testcases_dir"/${ex_num}-*-${input_postfix}; do
        # Skip input files that aren't properly named
        [[ "$input_path" =~ ${ex_num}-[0-9]+-${input_postfix}$ ]] || continue

        log ""

        # Check if the corresponding output file exists. If it doesn't then skip this test case
        output_path=${input_path/"$input_postfix"/"$output_postfix"}
        if [[ ! -e $output_path ]]; then
            info "Missing output file: '$output_path'. Skipping test case."
            continue
        fi

        # Check if all the student files were created successfully
        student_output_path=${input_path/"$input_postfix"/"$student_postfix"}
        doesFileExist "$student_output_path"

        exit_code=$?
        if [ $exit_code -ne 1 ]; then
            errorCont "$student_output_path not found. Make sure check.sh creates this file and does not delete it. Reminder that this file should contain the output of your program given the input in $input_path." 1
        else
            success "'$student_output_path' was created successfully."
        fi
    done
done

# If check failed
if [ "$doesPass" -eq 0 ]; then
    log ""
    error "Reached end with errors" 1
fi

# Ending message
log ""
br
success "END: End of validate.sh. You will get at least 50% if your '${student_check_file}' is written correctly." 
success "END: Review your '${student_check_file}' and the lab description carefully to ensure it is correct."
success "END: Ensure you have properly run diff's against the expected output in '${student_check_file}'."
br 
echo
